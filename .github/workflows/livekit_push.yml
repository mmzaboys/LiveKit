name: Deploy LiveKit to GCP VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVERIP }}
          username: ${{ secrets.SERVERUSER }}
          key: |
            ${{ secrets.SERVERSSHKEY }}
          script: |
            # --- Update packages and install prerequisites ---
            sudo apt-get update -y
            sudo apt-get install -y git ufw curl certbot

            # --- Remove Docker if exists ---
            sudo systemctl stop docker || true
            sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
            sudo rm -rf /var/lib/docker /etc/docker

            # --- Install Docker ---
            curl -fsSL https://get.docker.com -o /tmp/get-docker.sh
            sh /tmp/get-docker.sh

            # --- Install docker-compose v2 ---
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # --- Enable and start Docker ---
            sudo systemctl enable docker
            sudo systemctl start docker

            # --- Configure firewall (open HTTP for Certbot) ---
            sudo ufw allow 22/tcp      # SSH
            sudo ufw allow 80/tcp      # HTTP for Certbot
            sudo ufw allow 7880/tcp    # LiveKit WS/WSS
            sudo ufw allow 5349/tcp    # TURN TLS
            sudo ufw allow 50000:60000/udp  # WebRTC UDP
            sudo ufw allow 1935/tcp    # RTMP
            sudo ufw allow 8080/tcp    # WHIP
            sudo ufw --force enable

            # --- Setup LiveKit repository in home folder ---
            LIVEKIT_DIR="$HOME/livekit"
            rm -rf "$LIVEKIT_DIR"
            git clone https://github.com/mmzaboys/LiveKit.git "$LIVEKIT_DIR"
            cd "$LIVEKIT_DIR"

            # --- Stop any running containers ---
            sudo docker compose down || true

            # --- Create or renew SSL certificates ---
            sudo certbot certonly --standalone -n --agree-tos -m mahmoudmuhammed255@gmail.com \
              -d livekitsecrets.gleeze.com

            # --- Start LiveKit containers ---
            sudo docker compose up 

            echo "Deployment completed successfully."
